// Generated by view binder compiler. Do not edit!
package com.example.weatherapp_md.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.example.weatherapp_md.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView badWeatherSky;

  @NonNull
  public final ImageView blueSky;

  @NonNull
  public final LinearLayout bottomSheet;

  @NonNull
  public final TextView cityName;

  @NonNull
  public final TextView cloud;

  @NonNull
  public final TextView condition;

  @NonNull
  public final TextView humidity;

  @NonNull
  public final EditText inputCity;

  @NonNull
  public final TextView isRainOrNot;

  @NonNull
  public final LinearLayout layoutBuildings;

  @NonNull
  public final TextView localtime;

  @NonNull
  public final TextView maxMinTemp;

  @NonNull
  public final ImageView nightSky;

  @NonNull
  public final TextView pressure;

  @NonNull
  public final LottieAnimationView rainLotty;

  @NonNull
  public final Button search;

  @NonNull
  public final RelativeLayout slideUpBottomSheet;

  @NonNull
  public final LottieAnimationView snowLotty;

  @NonNull
  public final ImageView sun;

  @NonNull
  public final TextView sunrise;

  @NonNull
  public final TextView sunset;

  @NonNull
  public final TextView tempC;

  @NonNull
  public final TextView timeZone;

  @NonNull
  public final TextView wind;

  private FragmentHomeBinding(@NonNull RelativeLayout rootView, @NonNull ImageView badWeatherSky,
      @NonNull ImageView blueSky, @NonNull LinearLayout bottomSheet, @NonNull TextView cityName,
      @NonNull TextView cloud, @NonNull TextView condition, @NonNull TextView humidity,
      @NonNull EditText inputCity, @NonNull TextView isRainOrNot,
      @NonNull LinearLayout layoutBuildings, @NonNull TextView localtime,
      @NonNull TextView maxMinTemp, @NonNull ImageView nightSky, @NonNull TextView pressure,
      @NonNull LottieAnimationView rainLotty, @NonNull Button search,
      @NonNull RelativeLayout slideUpBottomSheet, @NonNull LottieAnimationView snowLotty,
      @NonNull ImageView sun, @NonNull TextView sunrise, @NonNull TextView sunset,
      @NonNull TextView tempC, @NonNull TextView timeZone, @NonNull TextView wind) {
    this.rootView = rootView;
    this.badWeatherSky = badWeatherSky;
    this.blueSky = blueSky;
    this.bottomSheet = bottomSheet;
    this.cityName = cityName;
    this.cloud = cloud;
    this.condition = condition;
    this.humidity = humidity;
    this.inputCity = inputCity;
    this.isRainOrNot = isRainOrNot;
    this.layoutBuildings = layoutBuildings;
    this.localtime = localtime;
    this.maxMinTemp = maxMinTemp;
    this.nightSky = nightSky;
    this.pressure = pressure;
    this.rainLotty = rainLotty;
    this.search = search;
    this.slideUpBottomSheet = slideUpBottomSheet;
    this.snowLotty = snowLotty;
    this.sun = sun;
    this.sunrise = sunrise;
    this.sunset = sunset;
    this.tempC = tempC;
    this.timeZone = timeZone;
    this.wind = wind;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bad_weather_sky;
      ImageView badWeatherSky = ViewBindings.findChildViewById(rootView, id);
      if (badWeatherSky == null) {
        break missingId;
      }

      id = R.id.blue_sky;
      ImageView blueSky = ViewBindings.findChildViewById(rootView, id);
      if (blueSky == null) {
        break missingId;
      }

      id = R.id.bottom_sheet;
      LinearLayout bottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheet == null) {
        break missingId;
      }

      id = R.id.cityName;
      TextView cityName = ViewBindings.findChildViewById(rootView, id);
      if (cityName == null) {
        break missingId;
      }

      id = R.id.cloud;
      TextView cloud = ViewBindings.findChildViewById(rootView, id);
      if (cloud == null) {
        break missingId;
      }

      id = R.id.condition;
      TextView condition = ViewBindings.findChildViewById(rootView, id);
      if (condition == null) {
        break missingId;
      }

      id = R.id.humidity;
      TextView humidity = ViewBindings.findChildViewById(rootView, id);
      if (humidity == null) {
        break missingId;
      }

      id = R.id.inputCity;
      EditText inputCity = ViewBindings.findChildViewById(rootView, id);
      if (inputCity == null) {
        break missingId;
      }

      id = R.id.is_rain_or_not;
      TextView isRainOrNot = ViewBindings.findChildViewById(rootView, id);
      if (isRainOrNot == null) {
        break missingId;
      }

      id = R.id.layout_buildings;
      LinearLayout layoutBuildings = ViewBindings.findChildViewById(rootView, id);
      if (layoutBuildings == null) {
        break missingId;
      }

      id = R.id.localtime;
      TextView localtime = ViewBindings.findChildViewById(rootView, id);
      if (localtime == null) {
        break missingId;
      }

      id = R.id.max_min_temp;
      TextView maxMinTemp = ViewBindings.findChildViewById(rootView, id);
      if (maxMinTemp == null) {
        break missingId;
      }

      id = R.id.night_sky;
      ImageView nightSky = ViewBindings.findChildViewById(rootView, id);
      if (nightSky == null) {
        break missingId;
      }

      id = R.id.pressure;
      TextView pressure = ViewBindings.findChildViewById(rootView, id);
      if (pressure == null) {
        break missingId;
      }

      id = R.id.rain_lotty;
      LottieAnimationView rainLotty = ViewBindings.findChildViewById(rootView, id);
      if (rainLotty == null) {
        break missingId;
      }

      id = R.id.search;
      Button search = ViewBindings.findChildViewById(rootView, id);
      if (search == null) {
        break missingId;
      }

      id = R.id.slideUp_bottom_sheet;
      RelativeLayout slideUpBottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (slideUpBottomSheet == null) {
        break missingId;
      }

      id = R.id.snow_lotty;
      LottieAnimationView snowLotty = ViewBindings.findChildViewById(rootView, id);
      if (snowLotty == null) {
        break missingId;
      }

      id = R.id.sun;
      ImageView sun = ViewBindings.findChildViewById(rootView, id);
      if (sun == null) {
        break missingId;
      }

      id = R.id.sunrise;
      TextView sunrise = ViewBindings.findChildViewById(rootView, id);
      if (sunrise == null) {
        break missingId;
      }

      id = R.id.sunset;
      TextView sunset = ViewBindings.findChildViewById(rootView, id);
      if (sunset == null) {
        break missingId;
      }

      id = R.id.temp_c;
      TextView tempC = ViewBindings.findChildViewById(rootView, id);
      if (tempC == null) {
        break missingId;
      }

      id = R.id.time_zone;
      TextView timeZone = ViewBindings.findChildViewById(rootView, id);
      if (timeZone == null) {
        break missingId;
      }

      id = R.id.wind;
      TextView wind = ViewBindings.findChildViewById(rootView, id);
      if (wind == null) {
        break missingId;
      }

      return new FragmentHomeBinding((RelativeLayout) rootView, badWeatherSky, blueSky, bottomSheet,
          cityName, cloud, condition, humidity, inputCity, isRainOrNot, layoutBuildings, localtime,
          maxMinTemp, nightSky, pressure, rainLotty, search, slideUpBottomSheet, snowLotty, sun,
          sunrise, sunset, tempC, timeZone, wind);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
